rOpenGov 
==============
css: slides.css
transition: fade
transition-speed: fast
*R-ekosysteemi avoimelle julkishallinnon datalle ja laskennalliselle yhteiskuntatutkimukselle*

[TCWR](https://www.utu.fi/fi/yksikot/soc/yksikot/sosiaalitieteet/tcwr/Sivut/home.aspx)-seminaari </br>
7.3.2014 Turussa

[Markus Kainu](http://markuskainu.fi)</br>
*tohtorikoulutettava* </br>
[Sosiaalitieteden laitos, Turun yliopisto](https://www.utu.fi/fi/yksikot/soc/yksikot/sosiaalitieteet/Sivut/home.aspx) </br>
[Aleksanteri-instituutti, Helsingin yliopisto](http://helsinki.fi/aleksanteri) </br>

<div class="github-fork-ribbon-wrapper right">
<div class="github-fork-ribbon">
<a href="https://github.com/muuankarski/" style="color:white;">Fork me on GitHub</a>
</div>
</div>



<!-- ---| notes begin |--------------------------------


---------| notes end |-----------------------------  --> 
 

Esityksen rakenne
========================================================

1. Mikä rOpenGov?
2. Miksi rOpenGov?
3. Mitä rOpenGov:n avulla voi tehdä?



========================================================
title: false

<h1>1. Mikä rOpenGov?</h1>

=======================================================
title:false

TCWR
------------------------------------------

>Turku Center for Welfare Research was founded in 1997 in a cooperative effort by the three universities in Turku (Åbo). **The Center is intended to more efficiently coordinate resources, both in teaching and research.**

rOpenGov
------------------------------------

>The rapidly emerging governmental and other open data streams provide novel opportunities for social sciences, data journalism, and citizen participation across the globe while computational tools to utilize these resources are lacking. **A community-driven software ecosystem provides a scalable solution and a potential to revolutionize the field, taking advantage of the lessons learned in similar initiatives in other fields such as [Bioconductor](http://www.bioconductor.org/) and [rOpenSci](http://ropensci.org/).**


Mikä rOpenGov?
==============================================

[rOpenGov](http://ropengov.github.io) on *yhteisövetoinen ekosysteemi avoimen julkishallinnollisen datan ja laskennallisen yhteiskuntatutkimuksen R-paketeille*. 

Suomessa ja maailmalla nopeasti lisääntyvät hallinnollisen ja muun avoimen datan virrat ovat erityisen kiinnostavia yhteiskuntatieteiden, datajournaslimin ja kansalaisten osallistumisen näkökulmasta, mutta laskennalliset työkalut näiden datavirtojen hyödyntämiseen vielä ovat puutteellisia. 

rOpenGov-projektissa kehitetään yhteisövetoista skaalautuvaa ohjelmistoekosysteemiä tavoitteena valjastaa avoimen laskennallisen analyysin ja uusien datalähteiden potentiaali yhteiskuntatieteiden käyttöön. 

Projekti ottaa oppia biotieteiden menestyksekkäiden ekosysteemiprojektien kuten [Bioconductor](http://www.bioconductor.org/):in tai [rOpenSci](http://ropensci.org/):n kokemuksista.


rOpenGov-yhteisö
==============================================

rOpenGov on yhteisöllinen projekti, joka rakentuu **ydintiimistä**, **pakettien kehittäjistä** ja **pakettien käyttäjistä**.  

**Käyttäjäyhteisö** koostuu akateemisista tutkijoista, opiskelijoista, datajournalisteista, kansalaistieteilijöistä ja muista kiinnostuneista.

**Ydintiimin** palvelee kehittäjiä ja käyttäjiä ylläpitämällä infrastruktuuria, arvioimalla uusia paketteja ja laatimalla suosituksia pakettien toiminnalle. Ydintiimin jäsenillä on laskennallisten tieteiden koulutus:

- [Leo Lahti](http://www.iki.fi/Leo.Lahti) (Univ. Helsinki, Finland and Wageningen Univ., Netherlands)
- [Juuso Parkkinen](http://ouzor.github.io/) (Aalto Univ., Finland) 
- [Joona Lehtomäki](https://github.com/jlehtoma) (University of Helsinki, Finland).

==============================================

**Pakettien kehittäjien** [projektit](http://ropengov.github.io/projects) helpottavat erilaisten lasennalliselle yhteiskuntatutkimukselle relevanttien datalähteiden ohjelmoinnillista hyödyntämistä. Mm. seuraavat eri tieteenalojen tutkijat ovat aktiivisesti mukana omien pakettiensa ja koko projektin kehitystyössä:

- [Przemyslaw Biecek](http://www.biecek.pl/) - [University of Warsaw](http://www.icm.edu.pl/web/guest/home)
- [François Briatte](http://f.briatte.org/) - [European School of Political and Social Sciences](http://espol-lille.eu/)
- [Scott Chamberlain](http://scottchamberlain.info/) - [Simon Fraser University in Vancouver](http://www.biology.sfu.ca/)
- [Manuel Eugster](http://users.ics.aalto.fi/meugster/) - [Helsinki Institute for Information Technology: Statistical Machine Learning and Bioinformatics Group](http://research.ics.aalto.fi/mi/)
- [Christopher Gandrud](http://christophergandrud.blogspot.fi/) - [Hertie School of Governance](http://www.hertie-school.org/)
- [Love Hansson](https://github.com/LCHansson) - [Swedish Pensions Agency](http://www.pensionsmyndigheten.se/)
- [Markus Kainu](http://markuskainu.fi/) - [Sosiaalitieteden laitos, Turun yliopisto](https://www.utu.fi/fi/yksikot/soc/yksikot/sosiaalitieteet/Sivut/home.aspx)
- [Stefan Kasberger](https://github.com/skasberger) - [openscienceASAP](http://openscienceasap.org/)
- [Thomas J. Leeper](http://thomasleeper.com/) - [Aarhus University](http://ps.au.dk/en/)
- [Måns Magnusson](https://github.com/MansMeg) - [Linköpings Universitet](http://www.liu.se/?l=en)



Projektin tavoitteet 1
==============================================

**Tilastolliset ja graafiset menetelmät**. Projekti pyrkii tarjoamaan yhteiskuntatieteille relevantteja laskennallisia työkaluja R-kielen täydentämiseksi tältä osin. Erityisesti rOpenGov tarjoaa työkaluja uusien datalähteiden käyttöön.

**Dokumentaatio**. Projektissa uskotaan että korkealaatuinen dokumentaatio ei ole vain hyvä kehittämistrategia vaan myös ehdoton edellytys sille että uudet työkalut otetaan käyttöön. Jokainen rOpenGov-paketti sisältää vähintää yhden *vignetin* (ohjedokumentti R-projektissa), jossa esitellään tehtäväkältöisesti, läpinäkyvästi ja toistettavasti kuvaus paketin toiminnallisuudesta ja mahdollisuuksista. Pakettien ensisijaiset vignetit käännetään automaattisesti online-ohjeiksi rOpenGov:n verkkosivuille.

**Skaalautuvuus**. rOpenGov on jaettu ohjelmistoalusta joka mahdollistaa laajennettavien, skaalautuvien ja keskenään yhteensopivien ohjelmistojen ripeän kehittämisen. Yksittäinen tutkija ei kykene tuottamaan näin monipuolisia työkaluja kuin mitä on tarpellista uusien datalähteiden potentiaalin hyödyntämiseksi.

Projektin tavoitteet 2
==============================================

**Avoin lähdekoodi**. rOpenGov on ja tulee aina olemaan 100 % avoimen lähdekoodin projekti. Projektissa käytetään laajasti [git](http://git-scm.com/):iä ja [Github](https://github.com/):ia versionhallintaan and yhteistyöhön. Kaikki paketit julkaistaan avoimen lähdekoodin lisensseillä, jotta käyttäjillä ja kehittäjillä olisi pääsy algoritmeihin sekä niiden sovelluksiin, ja että kansainvälinen tiedeyhteisö voi omistaa tutkimuksen tekemiseen vaadittavat ohjelmistot.

**Toistettava tutkimus**. Projektissa pyritään edistämään tutkimuksen toistettavuutta tarjoamalla työkaluja ja työvirtoja, jotka ovat helposti sovitettavissa erilaisiin tutkimuskysymyksiin erilaisissa tutkimusasetelmissa. Yhdenmukaisen käyttöliitymän [äänestysdataan](https://github.com/rOpenGov/finpar) sekä [taloudellisiin ja sosiaalisiin indikaattoreihin](https://github.com/muuankarski/rqog) on yksi esimerkki tästä. Tämän kaltainen rakenne tekee analyyseistä suoraviivaisempia ja ymmärrettävämpi, kun dataa ei kerätä ja käsitellä erikseen jokaisella kertaa.

**Avoin kehitystyö**. Projektissa käyttäjiä rohkaistaan astumaan kehittäjien rooliin, joko kehittämällä rOpenGov-yhteensopivia paketteja tai pakettien dokumentaatiota. Lisäksi rOpenGov tarjoaa foorumin ryhmien ja projektien yhteistyölle, joilla on yhteisiä tavoitteita ohjelmistojen kehityksessä. Tällainen yhteistyö voi myös auttaa tutkijoita oppimaan lisää laskennallisten ja tilastollisten menetelmien yhteiskuntatieteellisista sovelluksia. 


Kielipolitiikka 1
==============================================

rOpenGov perustuu tilastolliseen R-ohjelmointikieleen. R on korkean tason tulkattava ohjelmointikieli, jolla on helppo testata uusia laskennallisia menetelmiä. Olioperusteinen rakenne mahdollistaa moninaisten ja kompleksisten yhteiskuntatieteellisten tutkimusongelmien mallintamisen ja ratkaisemisen.

Valtaosa projektin komponenteista jaetaan R-paketteina. Näin käyttäjillä on mahdollisuus käsitellä, analysoida ja raportoida datoja ja tutkimuksen tuloksia. Projektiin ovat tervetulleita myös tukipalveluja ja metadataa tarjoavat paketit. Yleisperiaate on että pakettien julkaisuversiot jaetaan [CRAN](http://cran.r-project.org/)-verkoston kautta ja kehitysversiot [rOpenGov:n Github-organisaation](https://github.com/rOpenGov) kautta. 

Kielipolitiikka 2
==============================================

Projektin kieleksi on valittu R-kieli muuan muassa siksi että se tarjoaa:

1. vakiintuneen järjestelmän ohjelmistojen paketoimiselle,
2. monipuoliset mahdollisuudet automatisoituun dokumenttien luomiseen, 
3. verkossa olevan datan tehokkaaseen hyödyntämiseen sekä 
4. tuen moninaisten tilastollisten simulointien ja mallintamisten tekemiselle sekä 
5. tämänhetkistä huipputasoa edustavat graafiset graafiset ominaisuudet.

R:n puolesta puhuu lisäksi kielen ympärillä vaikuttava vahva ekosysteemi ja käyttäjäyhteisö. Lisäksi R on projektin tekijöille tutuin kieli ja sillä on vahvat näytöt samankaltaisista yhteisöllisistä projekteista muilta laskennallisten tieteiden aloilta. Samalla projektissa pidetään tarkkaa silmällä muiden ohjelmointikielien ja niiden ekosysteemien kehitystä, kuten [Python](http://www.python.org/)- ja [Julia](http://julialang.org/)-kielten, ja kielipolitiikkaa voidaan tulevaisuudessa laventaa.


========================================================
title: false

<h1>2. Miksi rOpenGov? </br> ihan vaiheessa!!!</h1>

Leon diat
====================================================

- Open government data is opening up novel opportunities for research
- Ongoing paradigm shift:
    - closed data & custom tools  ->  open data & flexible tools

Computational workflows are having an increasingly central role in social and political sciences
------------------------------------
- Borrow approaches from other fields 
    - (bioinformatics, climatology, economics, ecology, physics) 
    - similar data formats, related analytical challenges !

Two objectives
============================================

1. Pääsy dataan
    - programmatic access to data resources
    - transparent & ready-made preprocessing
    - data catalogues
    - harmonized data structures? 

2. Datan analysoiminen
    - customized analysis algorithms for social science data 
    - standardization of analytical approaches


New tools, new opportunities 
============================================

- promoting collaboration between computational & social scientist through simplified access to data and analysis tools

1. Programmatic access to (already) thousands of   governmental data resources across the globe
2. Online documentation
3. Analytical tools to monitor decision-making, demographics, 	economy, environment, historical data, etc.
4. Transparent & reproducible social science research
5. Wider implications: academic research, citizen science, 	data journalism, education, ...



Progress
============================================

| year  | happened |
| ----  | ------   |
| 2010  | Project starts | 
| 2011  | Data journalism workshops |
|       | Apps4Finland Data Opening Award |
| 2012  | SHARE-konferenssi (Belgrade) |
|  | Urban research seminar (Helsinki) |
|  | Collaboration with major Finnish media organizations (election data hackathon) |
|  | Sitra 14,000e funding for election data project | 
|  | Open Legislative Data-conference (Paris) |
|  | Open Knowledge Festival (Helsinki) |
|  | Apps4Finland Data Opening Award (Data elections & Datawiki) |
| 2013  | Open Knowledge Foundation; Open Science work group |
|  | CRAN |
|  | Russia, US, Poland, Austria, OpenStreetMap packages join rOpenGov |
|  | Open Knowledge Roadshow (Turku, Finland) |
|  | Apps4Finland award (collaboration with Demos Helsinki think tank) |
|  | NIPS Machine Learning Open Source Software workshop (Lake Tahoe, US) |
| 2014  | Political scientists rush in the project |
|   | Active development of guidelines and technical documentation |


From Data to Knowledge
=======================

>The scale and scope of data-driven social science are expanding rapidly and revolutionizing the field; data access and integration at a new level


bigtitle
========================================================
title: false

<h1>3. Mitä rOpenGov:n avulla voi tehdä? </br> ihan vaiheessa...!</h1>

sorvi - tapaus Sotkanet
==========================================================

**Listaa saatavilla olevat SOTKAnetin indikaattorit**

```{rsotkanet1, warning=FALSE}
library(sorvi)  # http://louhos.github.com/sorvi
sotkanet.indicators <- SotkanetIndicators(type = "table")
head(sotkanet.indicators)
```

**Listaa SOTKAnetin aluetiedot**

```{rsotkanet2, warning=FALSE}
sotkanet.regions <- SotkanetRegions(type = "table")
head(sotkanet.regions)
```


=========================================================
title:false

```{rsotkanet3, warning=FALSE}
dat <- GetDataSotkanet(indicators = 10013, years = 1990:2012, genders = c("female", 
    "male", "total"), region.category = "EUROOPPA", region = "Suomi")

# Translate gender names
dat$Sukupuoli <- dat$gender
dat$Sukupuoli <- gsub("female", "nainen", dat$Sukupuoli)
dat$Sukupuoli <- gsub("male", "mies", dat$Sukupuoli)
dat$Sukupuoli <- gsub("total", "ihminen", dat$Sukupuoli)
dat$Sukupuoli <- factor(dat$Sukupuoli)
```

```{rsotkanet4, eval=FALSE}
# Pick indicator name
indicator.name <- as.character(unique(dat$indicator.title.fi))
indicator.source <- as.character(unique(dat$indicator.organization.title.fi))

# Visualize
library(ggplot2, quietly = TRUE)
theme_set(theme_bw(20))
ggplot(dat, aes(x = year, y = primary.value, group = Sukupuoli, color = Sukupuoli)) +
  geom_line() +
  ggtitle(paste(indicator.name, indicator.source, sep = " / ")) +
  xlab("Vuosi") + ylab("Arvo") +
  theme(title = element_text(size = 10)) +
  theme(axis.title.x = element_text(size = 20)) +
  theme(axis.title.y = element_text(size = 20)) + 
  theme(legend.title = element_text(size = 15))
```


===================================================
title:false

```{rsotkanet5, eval=TRUE, echo=FALSE, fig.width=16, fig.height=13}
# Pick indicator name
indicator.name <- as.character(unique(dat$indicator.title.fi))
indicator.source <- as.character(unique(dat$indicator.organization.title.fi))

# Visualize
library(ggplot2, quietly = TRUE)
theme_set(theme_bw(20))
ggplot(dat, aes(x = year, y = primary.value, group = Sukupuoli, color = Sukupuoli)) +
  geom_line() +
  ggtitle(paste(indicator.name, indicator.source, sep = " / ")) +
  xlab("Vuosi") + ylab("Arvo") +
  theme(title = element_text(size = 10)) +
  theme(axis.title.x = element_text(size = 20)) +
  theme(axis.title.y = element_text(size = 20)) + 
  theme(legend.title = element_text(size = 15))
```


statfi - ja suomalaiset datat
============================================================

```{r}
library(devtools)
install_github("statfi", "ropengov")
library(statfi)
datasets.statfi <- list_statfi_files()
print(datasets.statfi[1,])
head(datasets.statfi$DESCRIPTION)

url <- "http://pxweb2.stat.fi/database/StatFin/asu/asas/010_asas_tau_101.px"
df <- get_statfi(url)
df[1:3,]
```


============================================================

```{r, eval=FALSE}
datasets.eurostat <- list_eurostat_files()
url <- "http://pxweb2.stat.fi/database/StatFin/asu/asvu/190_asvu_tau_110_fi.px  "
xx <- get_eurostat(url)

```



rustfare 
==============================================================

```{rrustfare1, eval=FALSE}
library(rustfare)
dat <- GetRosstat("life_expectancy_men", "region")
library(ggplot2)
ggplot(dat, aes(x = year, y = value, color = region_en)) + geom_point() + geom_line() +
geom_text(data = merge(dat, aggregate(year ~ region_en, dat, max),
by = c("year","region_en")),
aes(x = year, y = value, label = region_en), hjust = 1, vjust = -1,
size = 3) + theme(legend.position = "none")
```

===============================================================
title:false

```{rrustfare12, fig.width=16, fig.height=13, echo=FALSE}
library(rustfare)
dat <- GetRosstat("life_expectancy_men", "region")
library(ggplot2)
ggplot(dat, aes(x = year, y = value, color = region_en)) + geom_point() + geom_line() +
geom_text(data = merge(dat, aggregate(year ~ region_en, dat, max),
by = c("year","region_en")),
aes(x = year, y = value, label = region_en), hjust = 1, vjust = -1,
size = 3) + theme(legend.position = "none")
```



==================================================================
title:false

```{rrustfare2, eval=FALSE}
# cast the data into wide format
library(reshape2)
dat.w <- dcast(dat, region_en + id_shape ~ year, value.var = "value")

shape <- GetRusGADM("region")
library(maptools)
dat.w <- dat.w[!is.na(dat.w$id_shape), ]
row.names(dat.w) <- dat.w$id_shape
row.names(shape) <- as.character(shape$ID_1)
dat.w <- dat.w[order(row.names(dat.w)), ]
shape <- shape[order(row.names(shape)), ]
# from above
difference <- setdiff(row.names(shape), row.names(dat.w))
shape <- shape[!row.names(shape) %in% difference, ]
# 
df <- spCbind(shape, dat.w)

library(ggplot2)
library(rgeos)
df$id <- rownames(df@data)
map.points <- fortify(df, region = "id")
map.df <- merge(map.points, df, by = "id")

library(reshape2)
map.df.l <- melt(data = map.df, id.vars = c("id", "long", "lat", "group"), measure.vars = c("X2000", 
    "X2005", "X2009"))
# lets tweak a bit and remove X's from year values and make it into
# numerical
map.df.l$variable <- str_replace_all(map.df.l$variable, "X", "")
map.df.l$variable <- factor(map.df.l$variable)
map.df.l$variable <- as.numeric(levels(map.df.l$variable))[map.df.l$variable]

ggplot(map.df.l, aes(long,lat,group=group)) +
  geom_polygon(aes(fill = value)) +
  geom_polygon(data = map.df.l, aes(long,lat), 
               fill=NA, 
               color = "white",
               size=0.1) + # white borders
  coord_map(project="orthographic",
            xlim=c(25,170),
              ylim=c(45,70)) +
  facet_wrap(~variable, ncol=1) +
  theme_minimal()
```



==================================================================
title:false

```{rrustfare3, echo=FALSE, fig.width=16, fig.height=13}
# cast the data into wide format
library(reshape2)
dat.w <- dcast(dat, region_en + id_shape ~ year, value.var = "value")

shape <- GetRusGADM("region")
library(maptools)
dat.w <- dat.w[!is.na(dat.w$id_shape), ]
row.names(dat.w) <- dat.w$id_shape
row.names(shape) <- as.character(shape$ID_1)
dat.w <- dat.w[order(row.names(dat.w)), ]
shape <- shape[order(row.names(shape)), ]
# from above
difference <- setdiff(row.names(shape), row.names(dat.w))
shape <- shape[!row.names(shape) %in% difference, ]
# 
df <- spCbind(shape, dat.w)

library(ggplot2)
library(rgeos)
df$id <- rownames(df@data)
map.points <- fortify(df, region = "id")
map.df <- merge(map.points, df, by = "id")

library(reshape2)
map.df.l <- melt(data = map.df, id.vars = c("id", "long", "lat", "group"), measure.vars = c("X2000", 
    "X2005", "X2009"))
# lets tweak a bit and remove X's from year values and make it into
# numerical
map.df.l$variable <- str_replace_all(map.df.l$variable, "X", "")
map.df.l$variable <- factor(map.df.l$variable)
map.df.l$variable <- as.numeric(levels(map.df.l$variable))[map.df.l$variable]

ggplot(map.df.l, aes(long,lat,group=group)) +
  geom_polygon(aes(fill = value)) +
  geom_polygon(data = map.df.l, aes(long,lat), 
               fill=NA, 
               color = "white",
               size=0.1) + # white borders
  coord_map(project="orthographic",
            xlim=c(25,170),
              ylim=c(45,70)) +
  facet_wrap(~variable, ncol=1) +
  theme_minimal()
```




SmarterPoland: Eurostatin datat kartalla
=======================================================

```{rsmarterpoland, eval=TRUE}
library(SmarterPoland)
df <- getEurostatRaw(kod = "ilc_mddd21")
names(df) <- c("xx", 2011:2003)

df$unit <- lapply(strsplit(as.character(df$xx), ","), "[", 1)
df$geo.time <- lapply(strsplit(as.character(df$xx), ","), "[", 2)

df.l <- melt(data = df, id.vars = "geo.time", measure.vars = c("2003", "2004", 
    "2005", "2006", "2007", "2008", "2009", "2010", "2011"))

df.l$geo.time <- unlist(df.l$geo.time)
head(df.l)
```


Spatiaalinen data GISCO:sta
=========================================================

```{rsmarterpoland2, results='hide'}
download.file("http://epp.eurostat.ec.europa.eu/cache/GISCO/geodatafiles/NUTS_2010_60M_SH.zip", 
    destfile = "NUTS_2010_60M_SH.zip")
# unzip to SpatialPolygonsDataFrame
unzip("NUTS_2010_60M_SH.zip")
library(rgdal)
map <- readOGR(dsn = "./NUTS_2010_60M_SH/data", layer = "NUTS_RG_60M_2010")
# as the data is at NUTS2-level, we subset the spatialpolygondataframe
map_nuts2 <- subset(map, STAT_LEVL_ <= 2)
# Spatial dataframe has 467 rows and attribute data 223.  We need to make
# attribute data to have similar number of rows
NUTS_ID <- as.character(map_nuts2$NUTS_ID)
VarX <- rep("empty", 467)
dat <- data.frame(NUTS_ID, VarX)
# then we shall merge this with Eurostat data.frame
dat2 <- merge(dat, df, by.x = "NUTS_ID", by.y = "geo.time", all.x = TRUE)
## merge this manipulated attribute data with the spatialpolygondataframe
## there are still duplicates in the data, remove them
dat2$dup <- duplicated(dat2$NUTS_ID)
dat3 <- subset(dat2, dup == FALSE)
## rownames
row.names(dat3) <- dat3$NUTS_ID
row.names(map_nuts2) <- as.character(map_nuts2$NUTS_ID)
## order data
dat3 <- dat3[order(row.names(dat3)), ]
map_nuts2 <- map_nuts2[order(row.names(map_nuts2)), ]
## join
library(maptools)
shape <- spCbind(map_nuts2, dat3)
```


==============================================================
title:false

```{rsmarterpoland3}
## fortify spatialpolygondataframe into data.frame
library(ggplot2)
library(rgeos)
shape$id <- rownames(shape@data)
map.points <- fortify(shape, region = "id")
map.df <- merge(map.points, shape, by = "id")
# As we want to plot map faceted by years from 2003 to 2011 we have to
# melt it into long format
library(reshape2)
map.df.l <- melt(data = map.df, id.vars = c("id", "long", "lat", "group"), measure.vars = c("X2003", 
    "X2004", "X2005", "X2006", "X2007", "X2008", "X2009", "X2010", "X2011"))
# year variable (variable) is class string and type X20xx.  Lets remove
# the X and convert it to numerical
library(stringr)
map.df.l$variable <- str_replace_all(map.df.l$variable, "X", "")
map.df.l$variable <- factor(map.df.l$variable)
map.df.l$variable <- as.numeric(levels(map.df.l$variable))[map.df.l$variable]
```

```{rsmarterpoland4, eval=FALSE}
library(ggplot2)
# plot faceted by year
ggplot(map.df.l, aes(long,lat,group=group)) +
  geom_polygon(aes(fill = value)) +
  geom_polygon(data = map.df.l, aes(long,lat), 
               fill=NA, 
               color = "white",
               size=0.1) + # white borders
  coord_map(project="orthographic", xlim=c(-22,34),
              ylim=c(35,70)) + # projection
  facet_wrap(~variable) +
  theme_minimal()
```


=================================================================
title:false

```{rsmarterpoland5, echo=FALSE, fig.width=16, fig.height=13}
library(ggplot2)
# plot faceted by year
ggplot(map.df.l, aes(long,lat,group=group)) +
  geom_polygon(aes(fill = value)) +
  geom_polygon(data = map.df.l, aes(long,lat), 
               fill=NA, 
               color = "white",
               size=0.1) + # white borders
  coord_map(project="orthographic", xlim=c(-22,34),
              ylim=c(35,70)) + # projection
  facet_wrap(~variable) +
  theme_minimal()
```




